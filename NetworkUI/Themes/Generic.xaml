<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:NetworkUI">
	
	<Style x:Key="noScrollViewerListBoxStyle" TargetType="ListBox">
	</Style>
	
	<Style	TargetType="{x:Type local:NetworkView}">
		<Setter	Property="Template">
			<Setter.Value>
				<ControlTemplate	TargetType="{x:Type local:NetworkView}">
					<Border	Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<local:NodeItemsControl	x:Name="PART_Nodes"
													SelectionMode="Extended"
													ItemsSource="{TemplateBinding Nodes}"
													ItemTemplate="{TemplateBinding NodeItemTemplate}"
													ItemTemplateSelector="{TemplateBinding NodeItemTemplateSelector}"
													ItemContainerStyle="{TemplateBinding NodeItemContainerStyle}">
								<local:NodeItemsControl.Template>
									<ControlTemplate TargetType="ListBox">
										<!--Causes the items to be put in a canvas, without scrollviewer-->
										<Canvas IsItemsHost="True"/>
									</ControlTemplate>
								</local:NodeItemsControl.Template>
							</local:NodeItemsControl>
							<ItemsControl	x:Name="PART_Connections"
											ItemsSource="{TemplateBinding Connections}"
											ItemTemplate="{TemplateBinding ConnectionItemTemplate}"
											ItemTemplateSelector="{TemplateBinding ConnectionItemTemplateSelector}"
											ItemContainerStyle="{TemplateBinding ConnectionItemContainerStyle}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<Canvas/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
							</ItemsControl>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style	TargetType="{x:Type local:NodeItem}">
		<Setter	Property="ParentNetworkView"
				Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NetworkView}}, Path=.}"/>
		<Setter	Property="Canvas.Left"
				Value="{Binding X, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/><!--, RelativeSource={RelativeSource Self}-->
		<Setter	Property="Canvas.Top"
				Value="{Binding Y, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/><!--, RelativeSource={RelativeSource Self}-->
		<Setter Property="Canvas.ZIndex"
				Value="{Binding ZIndex, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/><!--, RelativeSource={RelativeSource Self}-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate	TargetType="{x:Type local:NodeItem}">
					<Border	Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="Aqua"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter Property="Background" Value="Yellow"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:ConnectorItem}">
		<Setter	Property="ParentNetworkView"
				Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NetworkView}}, Path=.}"/>
		<Setter	Property="ParentNodeItem"
				Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NodeItem}}, Path=.}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:ConnectorItem}">
					<ContentPresenter/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

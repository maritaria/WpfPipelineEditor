<Window x:Class="EditorApplication.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:EditorApplication"
		xmlns:NetworkUI="clr-namespace:NetworkUI;assembly=NetworkUI"
		xmlns:NetworkVM="clr-namespace:NetworkVM;assembly=NetworkVM"
		xmlns:Utils="clr-namespace:Utils;assembly=Utils"
		Title="MainWindow" Height="350" Width="525">
	
	<Window.Resources>
		
		<ResourceDictionary>
			
			<RoutedUICommand x:Key="CreateNode"/>
			<RoutedUICommand x:Key="DeleteNode"/>
			<RoutedUICommand x:Key="DeleteLink"/>
			
			<DataTemplate	DataType="{x:Type NetworkVM:Node}">
				<DockPanel>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*"/>
							<ColumnDefinition Width="1*"/>
						</Grid.ColumnDefinitions>
						<ItemsControl ItemsSource="{Binding InputConnectors}" Focusable="False"/>
						<ItemsControl ItemsSource="{Binding OutputConnectors}" Focusable="False" Grid.Column="1"/>
					</Grid>
				</DockPanel>
			</DataTemplate>
			
			<DataTemplate	DataType="{x:Type NetworkVM:Connector}">
				<DockPanel>
					<NetworkUI:ConnectorItem Width="10" Height="10" DockPanel.Dock="Left"></NetworkUI:ConnectorItem>
					<Label Content="{Binding Path=Name}"/>
				</DockPanel>
			</DataTemplate>
			
			<DataTemplate	DataType="{x:Type NetworkVM:OutputConnector}">
				<DockPanel>
					<NetworkUI:ConnectorItem Width="10" Height="10" DockPanel.Dock="Right"></NetworkUI:ConnectorItem>
					<Label Content="{Binding Path=Name}"/>
				</DockPanel>
			</DataTemplate>
			
			<DataTemplate	DataType="{x:Type NetworkVM:Link}">
				<local:FancyLink	Link="{Binding}"
									SourceHotspot="{Binding SourceHotspot}"
									DestinationHotspot="{Binding DestinationHotspot}">
					<local:FancyLink.ContextMenu>
						<ContextMenu>
							<MenuItem Command="{StaticResource DeleteLink}">
															
							</MenuItem>
						</ContextMenu>
					</local:FancyLink.ContextMenu>
				</local:FancyLink>
			</DataTemplate>

			<!-- Bind NodeItem properties to viewmodel -->
			<Style	TargetType="{x:Type NetworkUI:NodeItem}">
				<Setter Property="X" Value="{Binding X}"/>
				<Setter Property="Y" Value="{Binding Y}" />
				<Setter Property="ZIndex" Value="{Binding ZIndex}" />
				<Setter Property="IsSelected" Value="{Binding IsSelected}" />
				<Setter Property="Title" Value="{Binding Name}"/>
				<Setter Property="BorderBrush" Value="Black"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Background" Value="{x:Static SystemColors.WindowBrush}"/>
				<Setter Property="CornerRadius" Value="8"/>
				<Setter Property="BorderFill" Value="{x:Static SystemColors.InactiveCaptionBrush}"/>
				<Setter Property="InnerCornerRadius" Value="4"/>
				<Setter Property="ContextMenu">
					<Setter.Value>
						<ContextMenu>
							<MenuItem Command="{StaticResource DeleteNode}" Header="Delete node"></MenuItem>
						</ContextMenu>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="BorderFill" Value="{x:Static SystemColors.ActiveCaptionBrush}"/>
					</Trigger>
					<Trigger Property="IsSelected" Value="False">
						<Setter Property="BorderFill" Value="{x:Static SystemColors.InactiveCaptionBrush}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			
			<Style	TargetType="{x:Type NetworkUI:LinkItem}">
				<Setter Property="IsSelected" Value="{Binding IsSelected}"/>
			</Style>

			<Style	TargetType="{x:Type NetworkUI:ConnectorItem}">
				<Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type NetworkUI:ConnectorItem}">
							<Ellipse Stroke="Black" StrokeThickness="1" Fill="{TemplateBinding Background}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<DataTrigger Binding="{Binding Type}" Value="{x:Static NetworkVM:ConnectorType.Input}">
						<Setter Property="Background" Value="Lime"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding Type}" Value="{x:Static NetworkVM:ConnectorType.Output}">
						<Setter Property="Background" Value="Red"/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
			
			<Style	TargetType="{x:Type NetworkUI:EndpointItem}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type NetworkUI:EndpointItem}">
							<Path Fill="White" Stroke="Black" StrokeThickness="1">
								<Path.Data>
									<EllipseGeometry Center="0,0" RadiusX="4" RadiusY="4"/>
								</Path.Data>
							</Path>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
						
		</ResourceDictionary>
		
	</Window.Resources>
	
	<Window.CommandBindings>

		<CommandBinding Command="{StaticResource CreateNode}" Executed="CreateNode_Executed"/>
		<CommandBinding Command="{StaticResource DeleteNode}" Executed="DeleteNode_Executed"/>
		<CommandBinding Command="{StaticResource DeleteLink}" Executed="DeleteLink_Executed"/>

	</Window.CommandBindings>
	
	<Window.ContextMenu>
		<ContextMenu>
			<MenuItem Command="{StaticResource CreateNode}" Header="Create Node 1"
					  CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
		</ContextMenu>
	</Window.ContextMenu>
	
	<Window.DataContext>
		<local:ApplicationViewModel/>
	</Window.DataContext>

	<Grid>
		<Border Background="Transparent">
			<NetworkUI:NetworkView	x:Name="PART_NetworkView"
									NodesSource="{Binding Path=Network.Nodes}"
									ConnectionsSource="{Binding Path=Network.Links}"
									ConnectorLinkDragStarted="NetworkView_ConnectionDragStarted"
									ConnectorLinkDragging="NetworkView_ConnectionDragging"
									ConnectorLinkDragCompleted="NetworkView_ConnectionDragCompleted"
									ConnectorLinkFeedbackQuery="NetworkView_ConnectorLinkFeedbackQuery"
									ConnectorLinkFeedbackResult="NetworkView_ConnectorLinkFeedbackResult"
									EndpointLinkDragStarted="NetworkView_EndpointLinkDragStarted"
									EndpointLinkDragging="NetworkView_EndpointLinkDragging"
									EndpointLinkDragCompleted="NetworkView_EndpointLinkDragCompleted"
									EndpointLinkFeedbackQuery="NetworkView_EndpointLinkFeedbackQuery"
									EndpointLinkFeedbackResult="NetworkView_EndpointLinkFeedbackResult">
			</NetworkUI:NetworkView>
		</Border>
		<Button VerticalAlignment="Bottom" Height="23" Click="Button_Click"/>
	</Grid>
	
</Window>
